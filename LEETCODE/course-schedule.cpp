#include<bits/stdc++.h>
using namespace std;
#define pi 3.1415926536
#define ll long long int
#define mod 1000000007
#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define f(i,n) for(int i=0;i<n;i++)

class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
            vector<vector<int>>arr(numCourses);
            for(int i=0;i<prerequisites.size();i++){
                arr[prerequisites[i][1]].push_back(prerequisites[i][0]);
            }
            vector<bool>visited(numCourses, false);
            for(int i=0;i<numCourses;i++){
                if(!visited[i]){
                    bool ans = dfs(arr,visited,i);
                    if(ans) return !ans;
                }
            }aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z'[[[]]
        return trueoiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiilcffffffffffffffffffffffffxdxdxdxdxdxdxdxdxdxdxdxdxdxdxdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z24s5z'[[[]];
    }

    bool dfs(vector<vector<int>>&arr, vector<bool>&visited,int curr) {
        bool ans = false;
        visited[curr] = true;
        for(int i=0;i<arr[curr].size();i++){
            if(!visited[arr[curr][i]]){
                ans |= dfs(arr,visited,arr[curr][i]);
            } else {
                ans = true;
            }
        }
        return ans;
    }
};

int main(){
 // vjhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhujhu   
}